<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Meta AI：LLama2大语言模型下载</title>
      <link href="/2023/12/01/Meta%20AI%EF%BC%9ALLama2/"/>
      <url>/2023/12/01/Meta%20AI%EF%BC%9ALLama2/</url>
      
        <content type="html"><![CDATA[<h2 id="申请下载"><a href="#申请下载" class="headerlink" title="申请下载"></a>申请下载</h2><p>申请地址：<a href="https://ai.meta.com/resources/models-and-libraries/llama-downloads">Llama</a>，申请后下载URL会发送到邮箱，马赛克部分为URL，后边下载会用到，url有效期为24小时</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231201155819334.png" alt="image-20231201155819334"></p><p>长期使用可通过<a href="https://huggingface.co/meta-llama">Hugging Face</a>下载</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231207151127486.png" alt="image-20231207151127486"></p><p>注册hugging face账号，邮箱名称和申请meta ai llama模型邮箱一致，注册完成后找到meta ai llama 2模型，邮箱信息一致的话就会拥有访问权限，就可以下载模型了</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231207151808363.png" alt="image-20231207151808363"></p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>需要python环境，我这里安装的是python3.11.5版本</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231201150254417.png" alt="image-20231201150254417"></p><p>克隆GitHub上llama项目：<a href="https://github.com/facebookresearch/llama.git">https://github.com/facebookresearch/llama.git</a></p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231201150854149.png" alt="image-20231201150854149"></p><h2 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h2><p>执行文件下下载脚本，按照提示输入申请回复邮件内的url</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash download.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DM8 docker arm64</title>
      <link href="/2023/07/15/DM8%EF%BC%9Adocker-arm64/"/>
      <url>/2023/07/15/DM8%EF%BC%9Adocker-arm64/</url>
      
        <content type="html"><![CDATA[<p>使用docker安装达梦数据库（DM8），适用于arm架构，可以在Mac M1芯片运行。</p><p>原文链接：<a href="https://blog.csdn.net/qinchaozengh/article/details/123725042?spm=1001.2014.3001.5501">DM8 arm docker</a>、<a href="https://hub.docker.com/r/qinchz/dm8-arm64">Docker Hub</a>、<a href="https://github.com/qinchz/docker-dm">GitHub</a></p><h2 id="docker安装DM8"><a href="#docker安装DM8" class="headerlink" title="docker安装DM8"></a>docker安装DM8</h2><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><p>拉取DM8 arm docker镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull qinchz/dm8-arm64</span><br></pre></td></tr></table></figure><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker compose"></a>docker compose</h3><p>创建docker compose文件并启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;2.1&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  DM8:</span><br><span class="line">    image: qinchz/dm8-arm64:latest</span><br><span class="line">    container_name: dm8</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;5236:5236&quot;</span></span><br><span class="line">    mem_limit: 1g</span><br><span class="line">    memswap_limit: 1g</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/dm8:/home/dmdba/data </span><br></pre></td></tr></table></figure><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>DM8导入dmp文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入数据库bin执行目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/dmdba/dmdbms/bin</span><br><span class="line"><span class="comment"># 执行导入命令</span></span><br><span class="line">./dimp 用户名/密码@127.0.0.1:5236 file=dmp文件地址 full=Y</span><br></pre></td></tr></table></figure><h2 id="Mac用户使用DB-Server连接DM8"><a href="#Mac用户使用DB-Server连接DM8" class="headerlink" title="Mac用户使用DB Server连接DM8"></a>Mac用户使用DB Server连接DM8</h2><h3 id="下载Dm驱动"><a href="#下载Dm驱动" class="headerlink" title="下载Dm驱动"></a>下载Dm驱动</h3><p>进入<a href="https://www.dameng.com/">达梦官网</a>随便选择系统进行下载并解压，进入iso文件，然后进入目录：&#x2F;dameng&#x2F;source&#x2F;drivers&#x2F;jdbc找到DmjdvcDriver18.jar</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/dmhtml.png" alt="dmhtml"></p><h3 id="DBServer链接"><a href="#DBServer链接" class="headerlink" title="DBServer链接"></a>DBServer链接</h3><p>打开DBServer选择数据库-&gt;驱动管理器</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129114444332.png" alt="image-20231129114444332"></p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129114803245.png" alt="image-20231129114803245"></p><p>设置驱动类名、url模版、端口</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129114833011.png" alt="image-20231129114833011"></p><p>新建数据库连接-&gt;选择刚刚添加的驱动</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129115014303.png" alt="image-20231129115014303"></p>]]></content>
      
      
      <categories>
          
          <category> RDS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> dm8 </tag>
            
            <tag> arm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELK：docker安装elk</title>
      <link href="/2019/10/10/ELK%EF%BC%9Adocker%E5%AE%89%E8%A3%85elk/"/>
      <url>/2019/10/10/ELK%EF%BC%9Adocker%E5%AE%89%E8%A3%85elk/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><p>Elasticsearch是一个开源的分布式搜索引擎， 特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。 它是基于Lucene的搜索服务器，提供了一个分布式多用户能力的全文搜索引擎。java开发，并且作为apache许可条款下的开放源码发布， 是第二流行的企业搜索引擎。设计用于云计算中，能够达到实时搜索，稳定、可靠、快速、安装使用方便。</p><h3 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h3><p>Logstash是一个完全开源的工具，它可以对你的日志进行收集、过滤并且将其进行存储。 它是由JRuby语言编写，基于消息（message-based）的简单架构，并且运行在java虚拟机上（即JVM），不同于分离的代理段（agent）或者主机端（server），LogStash可以配置单一的代理段（agent）于其他开源软件结合，来实现不同的功能。</p><h3 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h3><p>Kiabna是一个完全开源的工具，它可以为Logstash和Elasticsearch提供可视化的web界面。 并且可以帮助用户进行汇总、分析和搜索重要的数据日志。使用Kibana，可以通过各种图表进行高级数据分析以及展示。它让海量数据更容易理解，操作简单，基于浏览器的用户界面可以快速创建仪表盘（dashboard，一种图表）实时显示Elasticsearch查询动态。设置Kibana非常简单，无需编写代码，几分钟之内就可以完成Kibana的安装并且启动Elasticsearch索引监测。</p><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p>此处我的机器为arm架构，选择相同版本镜像进行下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.elastic.co/elasticsearch/elasticsearch:8.10.0-arm64</span><br><span class="line">docker pull docker.elastic.co/kibana/kibana:8.10.0-1-arm64</span><br><span class="line">docker pull docker.elastic.co/logstash/logstash:8.10.0-arm64</span><br></pre></td></tr></table></figure><p>使用命令查看下载的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231130135315680.png" alt="image-20231130135315680"></p><h2 id="ELK启动"><a href="#ELK启动" class="headerlink" title="ELK启动"></a>ELK启动</h2><h3 id="简单启动获取配置"><a href="#简单启动获取配置" class="headerlink" title="简单启动获取配置"></a>简单启动获取配置</h3><p>启动容器获取配置进行挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># es</span></span><br><span class="line">docker run -d --name elk_elasticsearch -p 9200:9200  -e <span class="string">&quot;discovery.type=single-node&quot;</span> docker.elastic.co/elasticsearch/elasticsearch:8.10.0-arm64</span><br><span class="line">docker <span class="built_in">cp</span> elk_elasticsearch:/usr/share/elasticsearch/plugins /宿主机地址（data、logs、config同理）</span><br><span class="line"><span class="comment"># kibana</span></span><br><span class="line">docker run -d --name elk_kibana -p 5601:5601 -e <span class="string">&quot;ELASTICSEARCH_HOSTS=http://es:9200&quot;</span> -e <span class="string">&quot;I18N_LOCALE=zh-CN&quot;</span> docker.elastic.co/kibana/kibana:8.10.0-1-arm64</span><br><span class="line">docker <span class="built_in">cp</span> elk_kibana:/usr/share/kibana/config /宿主机地址</span><br><span class="line"><span class="comment"># logstash</span></span><br><span class="line">docker run -d -p 5041:5041 --name elk_logstash docker.elastic.co/logstash/logstash:8.10.0-arm64</span><br><span class="line">docker <span class="built_in">cp</span> elk_logstash:/usr/share/logstash/config /宿主机地址（pipeline、data同理）</span><br></pre></td></tr></table></figure><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker compose"></a>docker compose</h3><p>编写docker compose文件，配置es、kibana、logstash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  elasticsearch:</span><br><span class="line">    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0-arm64  <span class="comment"># 镜像</span></span><br><span class="line">    container_name: elk_elasticsearch  <span class="comment"># 定义容器名称</span></span><br><span class="line">    environment:</span><br><span class="line">      - <span class="string">&quot;cluster.name=elasticsearch&quot;</span> <span class="comment"># 设置集群名称为elasticsearch</span></span><br><span class="line">      - <span class="string">&quot;discovery.type=single-node&quot;</span> <span class="comment"># 以单一节点模式启动</span></span><br><span class="line">      - <span class="string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx1024m&quot;</span> <span class="comment"># 设置使用jvm内存大小</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /宿主机/docker/elk/elasticsearch/plugins:/usr/share/elasticsearch/plugins <span class="comment"># 插件文件挂载</span></span><br><span class="line">      - /宿主机/docker/elk/elasticsearch/data:/usr/share/elasticsearch/data <span class="comment"># 数据文件挂载</span></span><br><span class="line">      - /宿主机/docker/elk/elasticsearch/logs:/usr/share/elasticsearch/logs</span><br><span class="line">      - /宿主机/docker/elk/elasticsearch/config:/usr/share/elasticsearch/config</span><br><span class="line">    ports:</span><br><span class="line">      - 9200:9200</span><br><span class="line">      - 9300:9300</span><br><span class="line">  kibana:</span><br><span class="line">    image: docker.elastic.co/kibana/kibana:8.10.0-1-arm64</span><br><span class="line">    container_name: elk_kibana</span><br><span class="line">    volumes:</span><br><span class="line">      - /宿主机/docker/elk/kibana/config:/usr/share/kibana/config</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch <span class="comment"># kibana在elasticsearch启动之后再启动</span></span><br><span class="line">    links:</span><br><span class="line">    - elasticsearch:es <span class="comment"># 可以用es这个域名访问elasticsearch服务</span></span><br><span class="line">    environment:</span><br><span class="line">      - ELASTICSEARCH_URL=http://es:9200 <span class="comment"># 设置访问elasticsearch的地址</span></span><br><span class="line">      - I18N_LOCALE=zh-CN <span class="comment"># kibana中文界面显示</span></span><br><span class="line">    ports:</span><br><span class="line">      - 5601:5601</span><br><span class="line">  logstash:</span><br><span class="line">    image: docker.elastic.co/logstash/logstash:8.10.0-arm64 </span><br><span class="line">    container_name: elk_logstash</span><br><span class="line">    volumes:</span><br><span class="line">      <span class="comment"># 挂载logstash的配置文件</span></span><br><span class="line">      - /宿主机/docker/elk/logstash/config:/usr/share/logstash/config</span><br><span class="line">      - /宿主机/docker/elk/logstash/pipeline:/usr/share/logstash/pipeline</span><br><span class="line">      - /宿主机/docker/elk/logstash/data:/usr/share/logstash/data</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch <span class="comment"># kibana在elasticsearch启动之后再启动</span></span><br><span class="line">    links:</span><br><span class="line">      - elasticsearch:es <span class="comment"># 可以用es这个域名访问elasticsearch服务</span></span><br><span class="line">    ports:</span><br><span class="line">      - 5041:5041</span><br></pre></td></tr></table></figure><p>进入脚本所在文件夹执行启动命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>命令进入es容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it elk_elasticsearch /bin/bash</span><br><span class="line"><span class="comment"># 重置elastic、kibana、logstash账户密码，执行命令之后按照步骤重置密码</span></span><br><span class="line"><span class="comment"># kibana管理界面登陆账户及密码</span></span><br><span class="line">./bin/elasticsearch-reset-password -u elastic -i</span><br><span class="line"><span class="comment"># kibana访问es数据账户</span></span><br><span class="line">./bin/elasticsearch-reset-password -u kibana_system -i</span><br><span class="line"><span class="comment"># logstash输出数据到es账户</span></span><br><span class="line">./bin/elasticsearch-reset-password -u logstash_system -i</span><br></pre></td></tr></table></figure><p>配置本机es文件夹config下编辑elasticsearch.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cluster.name: <span class="string">&quot;docker-cluster&quot;</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">xpack.monitoring.collection.enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>配置本机kibana文件夹config下编辑kibana.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">server.shutdownTimeout: <span class="string">&quot;5s&quot;</span></span><br><span class="line">elasticsearch.hosts: [ <span class="string">&quot;http://es:9200&quot;</span> ]</span><br><span class="line">elasticsearch.username: <span class="string">&quot;kibana_system&quot;</span></span><br><span class="line">elasticsearch.password: <span class="string">&quot;123456&quot;</span></span><br><span class="line">monitoring.ui.container.elasticsearch.enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>配置本机logstash文件夹config下编辑logstash.yml和pipeline下的logstash.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">xpack.monitoring.elasticsearch.hosts: [ <span class="string">&quot;http://es:9200&quot;</span> ]</span><br><span class="line">xpack.monitoring.elasticsearch.username: <span class="string">&quot;logstash_system&quot;</span></span><br><span class="line">xpack.monitoring.elasticsearch.password: <span class="string">&quot;123456&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置输出到es</span></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">   hosts =&gt; [<span class="string">&quot;宿主机ip地址:9200&quot;</span>]</span><br><span class="line">   user =&gt; <span class="string">&quot;elastic&quot;</span></span><br><span class="line">   password =&gt; <span class="string">&quot;123456&quot;</span></span><br><span class="line">   codec =&gt; json</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改配置完成，重新启动elk容器</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>访问ip:5601进入kibana管理界面，使用上述账户密码登陆</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231130143536562.png" alt="image-20231130143536562"></p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231130143613904.png" alt="image-20231130143613904"></p><p>访问ip:9200，依旧使用kibana管理界面账户登陆</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231130143743864.png" alt="image-20231130143743864"></p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231130143818305.png" alt="image-20231130143818305"></p>]]></content>
      
      
      <categories>
          
          <category> SOA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> es </tag>
            
            <tag> kibana </tag>
            
            <tag> logstash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos：docker安装nacos</title>
      <link href="/2019/10/09/Nacos%EF%BC%9Adocker%E5%AE%89%E8%A3%85nacos/"/>
      <url>/2019/10/09/Nacos%EF%BC%9Adocker%E5%AE%89%E8%A3%85nacos/</url>
      
        <content type="html"><![CDATA[<h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><h3 id="选择所需镜像版本"><a href="#选择所需镜像版本" class="headerlink" title="选择所需镜像版本"></a>选择所需镜像版本</h3><p>选择所需镜像版本，通过命令拉取镜像，不同版本使用对应docker命令，需注意查看镜像版本是否有本机系统适用的</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129160631232.png" alt="image-20231129160631232"></p><h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><p>docker images命令查看拉取到的镜像</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129160709771.png" alt="image-20231129160709771"></p><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker compose"></a>docker compose</h2><h3 id="启动nacos"><a href="#启动nacos" class="headerlink" title="启动nacos"></a>启动nacos</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简单启动用于宿主机挂载</span></span><br><span class="line">docker run --name nacos -d -p 8848:8848 -e MODE=standalone  nacos/nacos-server:v2.2.0-slim</span><br></pre></td></tr></table></figure><h3 id="复制容器文件"><a href="#复制容器文件" class="headerlink" title="复制容器文件"></a>复制容器文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker cp命令，前面为容器文件目录 后边为宿主机目录（log、data同理）</span></span><br><span class="line">docker <span class="built_in">cp</span> nacos:/home/nacos/conf /宿主机文件地址</span><br></pre></td></tr></table></figure><h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><p>创建docker-compose.yml脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;2&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  nacos:</span><br><span class="line">    image: nacos/nacos-server:v2.2.0-slim                        <span class="comment"># 镜像`nacos/nacos-server:v2.1.2-slim`</span></span><br><span class="line">    container_name: nacos                                        <span class="comment"># 容器名为&#x27;nacos&#x27;</span></span><br><span class="line">    restart: always                                              <span class="comment"># 指定容器退出后的重启策略为始终重启</span></span><br><span class="line">    volumes:                                                     <span class="comment"># 数据卷挂载路径设置,将本机目录映射到容器目录</span></span><br><span class="line">      - /Users/gubin/Documents/docker/nacos/logs:/home/nacos/logs</span><br><span class="line">      - /Users/gubin/Documents/docker/nacos/conf:/home/nacos/conf</span><br><span class="line">      - /Users/gubin/Documents/docker/nacos/data:/home/nacos/data</span><br><span class="line">    environment:</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">      LANG: en_US.UTF-8</span><br><span class="line">      MODE: standalone <span class="comment"># 单机模式启动</span></span><br><span class="line">    ports:                              <span class="comment"># 映射端口</span></span><br><span class="line">      - <span class="string">&quot;8848:8848&quot;</span></span><br><span class="line">      - <span class="string">&quot;9848:9848&quot;</span></span><br><span class="line">      - <span class="string">&quot;9849:9849&quot;</span></span><br><span class="line">    cpu_shares: 4</span><br><span class="line">    mem_limit: 2048M</span><br></pre></td></tr></table></figure><h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><p>进入脚本文件所在位置执行 docker-compose up -d（此命令会执行脚本文件所在文件夹内所有脚本）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SAO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> SOA </tag>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis：docker安装redis</title>
      <link href="/2019/10/08/Redis%EF%BC%9Adocker%E5%AE%89%E8%A3%85redis/"/>
      <url>/2019/10/08/Redis%EF%BC%9Adocker%E5%AE%89%E8%A3%85redis/</url>
      
        <content type="html"><![CDATA[<h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><h3 id="选择所需镜像版本"><a href="#选择所需镜像版本" class="headerlink" title="选择所需镜像版本"></a>选择所需镜像版本</h3><p>选择所需镜像版本，通过命令拉取镜像，不同版本使用对应docker命令，需注意查看镜像版本是否有本机系统适用的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure><h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><p>docker images命令查看拉取到的镜像</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129144723898.png" alt="image-20231129144723898"></p><h2 id="启动并连接"><a href="#启动并连接" class="headerlink" title="启动并连接"></a>启动并连接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name redis -p 6379:6379 redis redis-server --requirepass <span class="string">&quot;123456&quot;</span> --appendonly <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>可以使用RedisDesktopManager进行连接并操作</p>]]></content>
      
      
      <categories>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> redis </tag>
            
            <tag> nosql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql：docker安装mysql</title>
      <link href="/2019/09/18/mysql%EF%BC%9Adocker%E5%AE%89%E8%A3%85mysql/"/>
      <url>/2019/09/18/mysql%EF%BC%9Adocker%E5%AE%89%E8%A3%85mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><h3 id="选择所需镜像版本"><a href="#选择所需镜像版本" class="headerlink" title="选择所需镜像版本"></a>选择所需镜像版本</h3><p>选择所需镜像版本，通过命令拉取镜像，不同版本使用对应docker命令，需注意查看镜像版本是否有本机系统适用的</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129141706241.png" alt="image-20231129141706241"></p><h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><p>docker images命令查看拉取到的镜像</p><p><img src="https://cdn.jsdelivr.net/gh/gubin0715/image/image-20231129141920860.png" alt="image-20231129141920860"></p><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker compose"></a>docker compose</h2><h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><p>创建docker-compose.yml脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;2&#x27;</span></span><br><span class="line">services:</span><br><span class="line">mysql:</span><br><span class="line"><span class="comment">#镜像</span></span><br><span class="line">image: arm64v8/mysql:latest</span><br><span class="line"><span class="comment">#容器名</span></span><br><span class="line">container_name: mysql                                        </span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">    MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">    TZ: Asia/Shanghai</span><br><span class="line">    ports:</span><br><span class="line">    - <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">    --lower-case-table-names=1</span><br><span class="line">    --character-set-server=utf8mb4</span><br><span class="line">    --collation-server=utf8mb4_general_ci</span><br></pre></td></tr></table></figure><h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><p>进入脚本文件所在位置执行 docker-compose up -d（此命令会执行脚本文件所在文件夹内所有脚本）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="连接mysql"><a href="#连接mysql" class="headerlink" title="连接mysql"></a>连接mysql</h2><p>通过可视化管理工具，根据脚本文件配置的密码及端口连接到mysql服务</p>]]></content>
      
      
      <categories>
          
          <category> RDS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/06/hello-world/"/>
      <url>/2018/05/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hello word </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello word </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
